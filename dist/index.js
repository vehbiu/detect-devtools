function b(e){l=e}var c=!1,l=(e,t,r)=>{console.log(`Default Check - Now open: ${e}. Type: ${t}: ${r}`)};class n{usable=!1;TAG="BaseCheck";constructor(e,t){this.TAG=e,this.usable=t||!0}enable(){this.usable&&this._enable()}get isOpen(){return c}set isOpen(e){c=e}onChange(e,t){if(e===this.isOpen)return;this.isOpen=e,l(e,this.TAG,t)}}class s extends n{constructor(){super("DebugCheck")}check=()=>{const e=Date.now();(()=>{debugger})();const t=Date.now()-e;if(t>100)this.onChange(!0,{date:e,diff:t})};_enable(){setInterval(this.check,500)}}function u(){const e={};for(let t=0;t<300;t++)e[t.toString()]=t.toString();return e}function p(){const e=[],t=u();for(let r=0;r<45;r++)e.push(t);return e}function a(e){const t=performance.now();return e(),performance.now()-t}class o extends n{maxLogTime=0;constructor(){super("LogPerformance")}check=()=>{if(document.hidden)return;const e=a(()=>{console.table(p())}),t=a(()=>{console.log(p())});if(this.maxLogTime=Math.max(this.maxLogTime,t),this.maxLogTime===0&&this.isOpen){this.onChange(!1,{mlt:this.maxLogTime,tst:e,lst:t});return}if(e>this.maxLogTime*10)this.onChange(!0,{mlt:this.maxLogTime,tst:e,lst:t});else this.onChange(!1,{mlt:this.maxLogTime,tst:e,lst:t})};_enable(){setInterval(this.check,1000)}}var _=["id","innerText","style","accessKey"];class i extends n{image=new Image;detected(e){this.onChange(!0,{type:e})}constructor(){super("ObjectID");for(let e of _)this.image.__defineGetter__(e,()=>this.detected("defineGetter")),Object.defineProperty(this.image,e,{get:()=>this.detected("defineProperty")})}check=()=>{console.dir(this.image)};_enable(){setInterval(this.check,1000)}}function Z(e){if(e)b(e);f.forEach((t)=>{t._enable()})}var f=[new i,new o,new s];export{Z as init};
